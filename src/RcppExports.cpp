// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "jointprof_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// callback1_cpp
void callback1_cpp(Rcpp::XPtr<int> x);
RcppExport SEXP _jointprof_callback1_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<int> >::type x(xSEXP);
    callback1_cpp(x);
    return R_NilValue;
END_RCPP
}
// callback2_cpp
void callback2_cpp(Rcpp::XPtr<int> x);
RcppExport SEXP _jointprof_callback2_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<int> >::type x(xSEXP);
    callback2_cpp(x);
    return R_NilValue;
END_RCPP
}
// callback3_cpp
void callback3_cpp();
RcppExport SEXP _jointprof_callback3_cpp() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    callback3_cpp();
    return R_NilValue;
END_RCPP
}
// init_profiler_impl
List init_profiler_impl();
RcppExport SEXP _jointprof_init_profiler_impl() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(init_profiler_impl());
    return rcpp_result_gen;
END_RCPP
}
// start_profiler_impl
void start_profiler_impl(List ldc, std::string path);
RcppExport SEXP _jointprof_start_profiler_impl(SEXP ldcSEXP, SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type ldc(ldcSEXP);
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    start_profiler_impl(ldc, path);
    return R_NilValue;
END_RCPP
}
// stop_profiler_impl
void stop_profiler_impl(List ldc);
RcppExport SEXP _jointprof_stop_profiler_impl(SEXP ldcSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type ldc(ldcSEXP);
    stop_profiler_impl(ldc);
    return R_NilValue;
END_RCPP
}

RcppExport void R_unload_jointprof(void *);

static const R_CallMethodDef CallEntries[] = {
    {"_jointprof_callback1_cpp", (DL_FUNC) &_jointprof_callback1_cpp, 1},
    {"_jointprof_callback2_cpp", (DL_FUNC) &_jointprof_callback2_cpp, 1},
    {"_jointprof_callback3_cpp", (DL_FUNC) &_jointprof_callback3_cpp, 0},
    {"_jointprof_init_profiler_impl", (DL_FUNC) &_jointprof_init_profiler_impl, 0},
    {"_jointprof_start_profiler_impl", (DL_FUNC) &_jointprof_start_profiler_impl, 2},
    {"_jointprof_stop_profiler_impl", (DL_FUNC) &_jointprof_stop_profiler_impl, 1},
    {"R_unload_jointprof", (DL_FUNC) &R_unload_jointprof, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_jointprof(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
